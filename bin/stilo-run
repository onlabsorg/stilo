#!/usr/bin/env node

const Package = require("../lib/package");
const package = Package.find( process.cwd() );
const packageAPI = package.require('./');


function parseParameter (param) {
    const qmPos = param.indexOf('?');
    if (qmPos !== -1) {
        const syntax = param.slice(0, qmPos).trim();
        const description = param.slice(qmPos+1).trim();
        return [syntax, description];
    } else {
        return [param, undefined];
    }
}



const commander = require('commander');
const run = commander.createCommand();

for (let [commandName, commandSpecs] of Object.entries(packageAPI.commands)) {
    const cmd = run.command(commandName);

    cmd.description(commandSpecs.description || `${commandName} plugin`);
    
    if (commandSpecs.arguments) {
        for (let argument of commandSpecs.arguments) {
            const [syntax, description] = parseParameter(argument);
            cmd.argument(syntax, description);
        }
    }
    
    if (commandSpecs.options) {
        for (let option of commandSpecs.options) {
            const [syntax, description] = parseParameter(option);
            cmd.option(syntax, description);
        }
    }

    cmd.action((...args) => packageAPI.run(commandName, ...args));
}

run.parse( process.argv )
